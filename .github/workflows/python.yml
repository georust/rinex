name: python

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        py_ver: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py_ver }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin
      - name: Build
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64-apple-darwin
          args: --release -i python${{ matrix.py_ver }} --all-features -m rinex/Cargo.toml --out dist --sdist
      - name: Test wheel
        run: |
          pip install rinex --no-index --find-links dist --force-reinstall
          python -c "import rinex"
      - name: Prepare for upload
        run: tar czvf dist/*.whl rinex.tar.gz
      - name: Github Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: rinex-python${{ matrix.pyver }}-apple-darwin.tar.gz
          file: rinex.tar.gz
          tag: ${{ github.ref }}

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
        py_ver: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py_ver }}
          architecture: ${{ matrix.target }}
      - name: Build
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --all-features -m rinex/Cargo.toml --out dist
      - name: Test wheel
        run: |
          pip install rinex --no-index --find-links dist --force-reinstall
          python -c "import rinex"
      - name: Prepare for upload
        run: Compress-Archive dist/*.whl rinex.zip
      - name: Github Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: rinex-python${{ matrix.pyver }}-windows-${{ matrix.target }}.zip
          file: rinex.zip
          tag: ${{ github.ref }}
        
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x64]
        py_ver: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable 
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py_ver }}
          architecture: ${{ matrix.target }}
      - name: Build
        uses: PyO3/maturin-action@main
        with:
          target: x64 
          manylinux: auto
          args: --release -i python${{ matrix.py_ver }} --all-features -m rinex/Cargo.toml -o dist
      - name: Build
        run: |
          pip3 install rinex --no-index --find-links dist --force-reinstall
          python -c "import rinex"
      - name: Test wheel
        run: |
          pip install rinex --no-index --find-links dist --force-reinstall
          python -c "import rinex"
      - name: Prepare for upload
        run: tar czvf dist/*.whl rinex.tar.gz
      - name: Github Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: rinex-python${{ matrix.pyver }}-linux-${{ matrix.target }}.tar.gz
          file: rinex.tar.gz
          tag: ${{ github.ref }}
